---

- set_fact:
    galaxy_docker_env_vars: "{{ galaxy_docker_env_vars | combine(slurm_galaxy_docker_env_vars) }}"

- set_fact:
    galaxy_docker_volumes: "{{ galaxy_docker_volumes + slurm_galaxy_docker_volumes }}"

# in case of using galaxy_munge_key_password, generate munge.key file
- name: Generate munge key with password
  shell: echo -n "{{ galaxy_munge_key_password }}" | sha512sum | cut -d' ' -f1
  when: galaxy_munge_key_password != ''
  register: key_content
  changed_when: false

- name: Create munge.key file with password
  copy: content="{{ key_content.stdout }}\n" dest={{galaxy_export_dir}}/munge.key
  when: galaxy_munge_key_password != ''

# Otherwhise assume the munge.key exists and copy it from the default place
- name: Copy munge.key file
  command: cp /etc/munge/munge.key {{galaxy_export_dir}}/munge.key creates={{galaxy_export_dir}}/munge.key
  when: galaxy_munge_key_password == ''
  become: true
  become_user: munge

- name: Set correct permissions to munge.key file
  file: path={{galaxy_export_dir}}/munge.key mode=0444 owner=root

- name: Generate slurm.conf in the export dir
  template: src=slurm.conf.j2 dest={{galaxy_export_dir}}/slurm.conf

# Configure job_conf.xml
- name: Configure job_conf.xml
  copy:
    src: slurm_job_conf.xml
    dest: "{{galaxy_export_dir}}/slurm_job_conf.xml"

- name: Install virtualenv
  package: name=python-virtualenv state=present

- name: Install python-dev
  yum: name=python-devel
  when: ansible_os_family == "RedHat"

- name: Install python-devel
  apt: name=python-dev
  when: ansible_os_family == "Debian"

- name: Copy Galaxy pip Requirements
  #get_url: url=https://raw.githubusercontent.com/galaxyproject/galaxy/v19.09/lib/galaxy/dependencies/pipfiles/default/pinned-requirements.txt dest=/tmp/requirements.txt
  copy: src=requirements.txt dest=/tmp/requirements.txt

- name: Install Galaxy WN pip Requirements
  pip:
    requirements: /tmp/requirements.txt
    virtualenv: "{{galaxy_export_dir}}/galaxy_venv"
    extra_args: --only-binary all

- name: Patch error with warnings
  lineinfile:
    path: /home/export/galaxy_venv/lib/python2.7/site-packages/cwltool/__init__.py
    regexp: '^warnings.filterwarnings'
    insertafter: 'import warnings'
    line: 'warnings.filterwarnings("ignore")'
  ignore_errors: yes