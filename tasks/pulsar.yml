---
- name: Create pulsar dir
  file: path={{ galaxy_pulsar_path }} state=directory mode=755 owner=galaxy

- name: Install virtualenv
  package: name=python-virtualenv

- name: Install SSL requisites RedHat
  yum: name=libffi-devel,openssl-devel,python-devel,gcc
  when: galaxy_pulsar_ssl and ansible_os_family == "RedHat"

- name: Install SSL requisites Debian
  apt: name=libffi-dev,python-dev,libssl-dev,gcc
  when: galaxy_pulsar_ssl and ansible_os_family == "Debian"

- name: Install pulsar-app
  pip: name=pulsar-app virtualenv={{ galaxy_pulsar_path }}/venv

- name: Install drmaa with pip
  pip: name=drmaa virtualenv={{ galaxy_pulsar_path }}/venv
  when: galaxy_lrms == "slurm"

- name: Install pyOpenSSL with pip
  pip: name=pyOpenSSL virtualenv={{ galaxy_pulsar_path }}/venv
  when: galaxy_pulsar_ssl

- name: Install Bzip2
  package: name=bzip2

- name: Add libdrmaa_path
  set_fact:
     libdrmaa_path: ""
  when: galaxy_lrms == "local"

- name: Add libdrmaa_path
  set_fact:
     libdrmaa_path: "--libdrmaa_path /usr/local/lib/libdrmaa.so"
  when: galaxy_lrms == "slurm"

- name: Configurar pulsar
  command: "{{ galaxy_pulsar_path }}/venv/bin/pulsar-config {{ libdrmaa_path }} --private_token {{ galaxy_pulsar_token }}"
  args:
    chdir: "{{ galaxy_pulsar_path }}"
    creates: "{{ galaxy_pulsar_path }}/app.yml"

- name: Set owner to pulsar dir
  file: path={{ galaxy_pulsar_path }} state=directory owner=galaxy recurse=yes

- name: Create Pulsar systemd unit file
  template:
    src: "pulsar.service.j2"
    dest: "/etc/systemd/system/pulsar.service"

- name: Create certs dir
  file: path={{ galaxy_pulsar_path }}/certs state=directory mode=755 owner=galaxy

- name: Generate an OpenSSL private key.
  openssl_privatekey:
    path: "{{ galaxy_pulsar_path }}/certs/key.pem"

- name: Generate an OpenSSL CSR.
  openssl_csr:
    path: "{{ galaxy_pulsar_path }}/csr.pem"
    privatekey_path: "{{ galaxy_pulsar_path }}/certs/key.pem"
    common_name: "{{ ansible_fqdn }}"

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: "{{ galaxy_pulsar_path }}/certs/cert.pem"
    privatekey_path: "{{ galaxy_pulsar_path }}/certs/key.pem"
    csr_path: "{{ galaxy_pulsar_path }}/csr.pem"
    provider: selfsigned

- name: Assemble cert and key into one file
  assemble:
    src: "{{ galaxy_pulsar_path }}/certs"
    dest: "{{ galaxy_pulsar_path }}/pulsar.pem"

- name: Set ssl_pem in server.ini
  ini_file:
    path: "{{ galaxy_pulsar_path }}/server.ini"
    section: "server:main"
    option: ssl_pem
    value: "{{ galaxy_pulsar_path }}/pulsar.pem"

- name: Set host to 0.0.0.0 in server.ini
  ini_file:
    path: "{{ galaxy_pulsar_path }}/server.ini"
    section: "server:main"
    option: host
    value: "0.0.0.0"

- name: SystemD daemon-reload and enable/start service
  systemd:
    state: started
    enabled: yes
    name: pulsar.service
    daemon_reload: yes

- name: Wait pulsar to start
  wait_for: port=8913

#- name: Pulsar check
#  command: "{{ galaxy_pulsar_path }}/venv/bin/pulsar-check --private_token={{ galaxy_pulsar_token }}"